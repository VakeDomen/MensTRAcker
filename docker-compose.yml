version: '3.2'

services:
  backend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.backend
    restart: "unless-stopped"
    environment: 
      - PORT=${BACKEND_PORT}
      - SQLITE_DB={BACKEND_SQLITE_DB_PATH}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - HASH_SALT_ROUNDS=${BACKEND_HASH_SALT_ROUNDS}
      - JWT_SECRET=${BACKEND_JWT_SECRET}
    networks: 
      - proxy
#      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.menstracker_backend.rule=Host(`${BACKEND_DOMAIN}`)
      - traefik.http.routers.menstracker_backend.entrypoints=websecure
      - traefik.http.routers.menstracker_backend.tls=true
      - traefik.http.routers.menstracker_backend.tls.certresolver=le
      - traefik.http.services.menstracker_backend.loadbalancer.server.port=3000
  frontend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.frontend
    restart: "unless-stopped"
    networks:
      - proxy
#      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.menstracker.rule=Host(`${FRONTEND_DOMAIN}`)
      - traefik.http.routers.menstracker.entrypoints=websecure
      - traefik.http.routers.menstracker.tls=true
      - traefik.http.routers.menstracker.tls.certresolver=le

networks:
  proxy:
    external: true
#  backend:
#    driver: bridge
